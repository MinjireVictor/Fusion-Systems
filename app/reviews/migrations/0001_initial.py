# Generated by Django 4.0.10 on 2025-05-27 16:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(help_text='Unique identifier for this batch', max_length=100, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('started_date', models.DateTimeField(blank=True, null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_reviews', models.IntegerField(default=0, help_text='Total number of reviews in this batch')),
                ('processed_reviews', models.IntegerField(default=0, help_text='Number of successfully processed reviews')),
                ('failed_reviews', models.IntegerField(default=0, help_text='Number of failed reviews')),
                ('error_message', models.TextField(blank=True, help_text='Error message if batch failed')),
                ('processing_time_seconds', models.FloatField(blank=True, help_text='Total time taken to process this batch', null=True)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processed_date', models.DateTimeField(auto_now_add=True, help_text='When the analysis was completed')),
                ('primary_sentiment', models.CharField(help_text='Primary sentiment classification', max_length=50)),
                ('primary_topic', models.CharField(help_text='Primary topic classification', max_length=50)),
                ('sentiment_scores', models.JSONField(help_text='Detailed sentiment scores (positive, negative, neutral)')),
                ('topic_scores', models.JSONField(help_text='Detailed topic classification scores')),
                ('processing_time_seconds', models.FloatField(blank=True, help_text='Time taken to process this review', null=True)),
            ],
            options={
                'ordering': ['-processed_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_id', models.CharField(help_text='Unique identifier for the hotel', max_length=100)),
                ('hotel_name', models.CharField(help_text='Name of the hotel', max_length=255)),
                ('reviewer_name', models.CharField(blank=True, help_text='Name of the person leaving the review', max_length=255)),
                ('reviewer_email', models.EmailField(blank=True, help_text='Email address of the reviewer', max_length=254)),
                ('reviewer_phone', models.CharField(blank=True, help_text='Phone number of the reviewer', max_length=20)),
                ('rating', models.DecimalField(decimal_places=1, help_text='Rating from 1.0 to 5.0 stars', max_digits=2, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('comment', models.TextField(help_text='Review comment text')),
                ('submission_date', models.DateTimeField(auto_now_add=True, help_text='When the review was submitted')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['hotel_id'], name='reviews_rev_hotel_i_02ca71_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['submission_date'], name='reviews_rev_submiss_3181a8_idx'),
        ),
        migrations.AddField(
            model_name='analysisresult',
            name='review',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='reviews.review'),
        ),
        migrations.AddIndex(
            model_name='analysisresult',
            index=models.Index(fields=['primary_sentiment'], name='reviews_ana_primary_1a8cec_idx'),
        ),
        migrations.AddIndex(
            model_name='analysisresult',
            index=models.Index(fields=['primary_topic'], name='reviews_ana_primary_b2876c_idx'),
        ),
        migrations.AddIndex(
            model_name='analysisresult',
            index=models.Index(fields=['processed_date'], name='reviews_ana_process_71e726_idx'),
        ),
    ]
